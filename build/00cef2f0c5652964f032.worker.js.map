{"version":3,"sources":["../webpack/bootstrap","../node_modules/simple-statistics/dist/simple-statistics.min.js","components/statistics/worker.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","length","e","Math","abs","Error","a","pow","sqrt","NaN","h","slice","sort","u","f","ceil","log","exp","max","floor","min","g","Array","isArray","push","M","pop","v","w","q","b","random","y","E","I","P","C","N","R","D","A","S","T","this","totalCount","data","train","score","_","weights","bias","predict","x","z","B","U","PI","G","1","0.995","0.99","0.975","0.95","0.9","0.5","0.1","0.05","0.025","0.01","0.005","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","40","50","60","70","80","90","100","H","W","gaussian","J","nrd","Q","Y","Z","round","L","O","V","X","k","TypeError","linearRegression","linearRegressionLine","standardDeviation","rSquared","modeFast","Map","set","modeSorted","extent","minSorted","maxSorted","extentSorted","sum","sumSimple","product","quantile","quantileSorted","quantileRank","quantileRankSorted","interquartileRange","iqr","medianAbsoluteDeviation","mad","chunk","sampleWithReplacement","shuffle","shuffleInPlace","sample","ckmeans","uniqueCountSorted","sumNthPowerDeviations","equalIntervalBreaks","sampleCovariance","sampleCorrelation","sampleVariance","sampleStandardDeviation","sampleSkewness","sampleKurtosis","permutationsHeap","combinations","unshift","combinationsReplacement","concat","addToMean","combineMeans","combineVariances","geometricMean","harmonicMean","average","mean","median","medianSorted","subtractFromMean","rootMeanSquare","rms","variance","tTest","tTestTwoSample","BayesianClassifier","bayesian","PerceptronModel","perceptron","epsilon","factorial","gamma","Number","isInteger","sin","gammaln","Infinity","K","bernoulliDistribution","binomialDistribution","poissonDistribution","chiSquaredDistributionTable","chiSquaredGoodnessOfFit","kernelDensityEstimation","kde","zScore","cumulativeStdNormalProbability","toFixed","standardNormalTable","errorFunction","erf","inverseErrorFunction","probit","permutationTest","bisect","quickselect","sign","numericSort","__webpack_exports__","simple_statistics__WEBPACK_IMPORTED_MODULE_0__","self","addEventListener","event","input","res","ss","console","postMessage"],"mappings":"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","file":"00cef2f0c5652964f032.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","!function (r, t) {\n  \"object\" == typeof exports && \"undefined\" != typeof module ? t(exports) : \"function\" == typeof define && define.amd ? define([\"exports\"], t) : t(r.ss = {});\n}(this, function (r) {\n  function t(r) {\n    if (0 === r.length) return 0;\n\n    for (var t, n = r[0], e = 0, o = 1; o < r.length; o++) {\n      t = n + r[o], Math.abs(n) >= Math.abs(r[o]) ? e += n - t + r[o] : e += r[o] - t + n, n = t;\n    }\n\n    return n + e;\n  }\n\n  function n(r) {\n    if (0 === r.length) throw new Error(\"mean requires at least one data point\");\n    return t(r) / r.length;\n  }\n\n  function e(r, t) {\n    var e,\n        o,\n        a = n(r),\n        i = 0;\n    if (2 === t) for (o = 0; o < r.length; o++) {\n      i += (e = r[o] - a) * e;\n    } else for (o = 0; o < r.length; o++) {\n      i += Math.pow(r[o] - a, t);\n    }\n    return i;\n  }\n\n  function o(r) {\n    if (0 === r.length) throw new Error(\"variance requires at least one data point\");\n    return e(r, 2) / r.length;\n  }\n\n  function a(r) {\n    if (1 === r.length) return 0;\n    var t = o(r);\n    return Math.sqrt(t);\n  }\n\n  function i(r) {\n    if (0 === r.length) throw new Error(\"mode requires at least one data point\");\n    if (1 === r.length) return r[0];\n\n    for (var t = r[0], n = NaN, e = 0, o = 1, a = 1; a < r.length + 1; a++) {\n      r[a] !== t ? (o > e && (e = o, n = t), o = 1, t = r[a]) : o++;\n    }\n\n    return n;\n  }\n\n  function h(r) {\n    return r.slice().sort(function (r, t) {\n      return r - t;\n    });\n  }\n\n  function u(r) {\n    if (0 === r.length) throw new Error(\"min requires at least one data point\");\n\n    for (var t = r[0], n = 1; n < r.length; n++) {\n      r[n] < t && (t = r[n]);\n    }\n\n    return t;\n  }\n\n  function f(r) {\n    if (0 === r.length) throw new Error(\"max requires at least one data point\");\n\n    for (var t = r[0], n = 1; n < r.length; n++) {\n      r[n] > t && (t = r[n]);\n    }\n\n    return t;\n  }\n\n  function l(r, t) {\n    var n = r.length * t;\n    if (0 === r.length) throw new Error(\"quantile requires at least one data point.\");\n    if (t < 0 || t > 1) throw new Error(\"quantiles must be between 0 and 1\");\n    return 1 === t ? r[r.length - 1] : 0 === t ? r[0] : n % 1 != 0 ? r[Math.ceil(n) - 1] : r.length % 2 == 0 ? (r[n - 1] + r[n]) / 2 : r[n];\n  }\n\n  function s(r, t, n, e) {\n    for (n = n || 0, e = e || r.length - 1; e > n;) {\n      if (e - n > 600) {\n        var o = e - n + 1,\n            a = t - n + 1,\n            i = Math.log(o),\n            h = .5 * Math.exp(2 * i / 3),\n            u = .5 * Math.sqrt(i * h * (o - h) / o);\n        a - o / 2 < 0 && (u *= -1), s(r, t, Math.max(n, Math.floor(t - a * h / o + u)), Math.min(e, Math.floor(t + (o - a) * h / o + u)));\n      }\n\n      var f = r[t],\n          l = n,\n          g = e;\n\n      for (c(r, n, t), r[e] > f && c(r, n, e); l < g;) {\n        for (c(r, l, g), l++, g--; r[l] < f;) {\n          l++;\n        }\n\n        for (; r[g] > f;) {\n          g--;\n        }\n      }\n\n      r[n] === f ? c(r, n, g) : c(r, ++g, e), g <= t && (n = g + 1), t <= g && (e = g - 1);\n    }\n  }\n\n  function c(r, t, n) {\n    var e = r[t];\n    r[t] = r[n], r[n] = e;\n  }\n\n  function g(r, t) {\n    var n = r.slice();\n\n    if (Array.isArray(t)) {\n      !function (r, t) {\n        for (var n = [0], e = 0; e < t.length; e++) {\n          n.push(M(r.length, t[e]));\n        }\n\n        n.push(r.length - 1), n.sort(p);\n        var o = [0, n.length - 1];\n\n        for (; o.length;) {\n          var a = Math.ceil(o.pop()),\n              i = Math.floor(o.pop());\n\n          if (!(a - i <= 1)) {\n            var h = Math.floor((i + a) / 2);\n            v(r, n[h], Math.floor(n[i]), Math.ceil(n[a])), o.push(i, h, h, a);\n          }\n        }\n      }(n, t);\n\n      for (var e = [], o = 0; o < t.length; o++) {\n        e[o] = l(n, t[o]);\n      }\n\n      return e;\n    }\n\n    return v(n, M(n.length, t), 0, n.length - 1), l(n, t);\n  }\n\n  function v(r, t, n, e) {\n    t % 1 == 0 ? s(r, t, n, e) : (s(r, t = Math.floor(t), n, e), s(r, t + 1, t + 1, e));\n  }\n\n  function p(r, t) {\n    return r - t;\n  }\n\n  function M(r, t) {\n    var n = r * t;\n    return 1 === t ? r - 1 : 0 === t ? 0 : n % 1 != 0 ? Math.ceil(n) - 1 : r % 2 == 0 ? n - .5 : n;\n  }\n\n  function w(r, t) {\n    if (t < r[0]) return 0;\n    if (t > r[r.length - 1]) return 1;\n\n    var n = function (r, t) {\n      var n = 0,\n          e = 0,\n          o = r.length;\n\n      for (; e < o;) {\n        t <= r[n = e + o >>> 1] ? o = n : e = -~n;\n      }\n\n      return e;\n    }(r, t);\n\n    if (r[n] !== t) return n / r.length;\n    n++;\n\n    var e = function (r, t) {\n      var n = 0,\n          e = 0,\n          o = r.length;\n\n      for (; e < o;) {\n        t >= r[n = e + o >>> 1] ? e = -~n : o = n;\n      }\n\n      return e;\n    }(r, t);\n\n    if (e === n) return n / r.length;\n    var o = e - n + 1;\n    return o * (e + n) / 2 / o / r.length;\n  }\n\n  function d(r) {\n    var t = g(r, .75),\n        n = g(r, .25);\n    if (\"number\" == typeof t && \"number\" == typeof n) return t - n;\n  }\n\n  function q(r) {\n    return +g(r, .5);\n  }\n\n  function m(r) {\n    for (var t = q(r), n = [], e = 0; e < r.length; e++) {\n      n.push(Math.abs(r[e] - t));\n    }\n\n    return q(n);\n  }\n\n  function b(r, t) {\n    t = t || Math.random;\n\n    for (var n, e, o = r.length; o > 0;) {\n      e = Math.floor(t() * o--), n = r[o], r[o] = r[e], r[e] = n;\n    }\n\n    return r;\n  }\n\n  function y(r, t) {\n    return b(r.slice().slice(), t);\n  }\n\n  function E(r) {\n    for (var t, n = 0, e = 0; e < r.length; e++) {\n      0 !== e && r[e] === t || (t = r[e], n++);\n    }\n\n    return n;\n  }\n\n  function I(r, t) {\n    for (var n = [], e = 0; e < r; e++) {\n      for (var o = [], a = 0; a < t; a++) {\n        o.push(0);\n      }\n\n      n.push(o);\n    }\n\n    return n;\n  }\n\n  function P(r, t, n, e) {\n    var o;\n\n    if (r > 0) {\n      var a = (n[t] - n[r - 1]) / (t - r + 1);\n      o = e[t] - e[r - 1] - (t - r + 1) * a * a;\n    } else o = e[t] - n[t] * n[t] / (t + 1);\n\n    return o < 0 ? 0 : o;\n  }\n\n  function C(r, t, n, e, o, a, i) {\n    if (!(r > t)) {\n      var h = Math.floor((r + t) / 2);\n      e[n][h] = e[n - 1][h - 1], o[n][h] = h;\n      var u = n;\n      r > n && (u = Math.max(u, o[n][r - 1] || 0)), u = Math.max(u, o[n - 1][h] || 0);\n      var f,\n          l,\n          s,\n          c = h - 1;\n      t < e.length - 1 && (c = Math.min(c, o[n][t + 1] || 0));\n\n      for (var g = c; g >= u && !((f = P(g, h, a, i)) + e[n - 1][u - 1] >= e[n][h]); --g) {\n        (l = P(u, h, a, i) + e[n - 1][u - 1]) < e[n][h] && (e[n][h] = l, o[n][h] = u), u++, (s = f + e[n - 1][g - 1]) < e[n][h] && (e[n][h] = s, o[n][h] = g);\n      }\n\n      C(r, h - 1, n, e, o, a, i), C(h + 1, t, n, e, o, a, i);\n    }\n  }\n\n  function N(r, t) {\n    if (r.length !== t.length) throw new Error(\"sampleCovariance requires samples with equal lengths\");\n    if (r.length < 2) throw new Error(\"sampleCovariance requires at least two data points in each sample\");\n\n    for (var e = n(r), o = n(t), a = 0, i = 0; i < r.length; i++) {\n      a += (r[i] - e) * (t[i] - o);\n    }\n\n    return a / (r.length - 1);\n  }\n\n  function R(r) {\n    if (r.length < 2) throw new Error(\"sampleVariance requires at least two data points\");\n    return e(r, 2) / (r.length - 1);\n  }\n\n  function D(r) {\n    var t = R(r);\n    return Math.sqrt(t);\n  }\n\n  function A(r, t, n, e) {\n    return (r * t + n * e) / (t + e);\n  }\n\n  function S(r) {\n    if (0 === r.length) throw new Error(\"rootMeanSquare requires at least one data point\");\n\n    for (var t = 0, n = 0; n < r.length; n++) {\n      t += Math.pow(r[n], 2);\n    }\n\n    return Math.sqrt(t / r.length);\n  }\n\n  var T = function T() {\n    this.totalCount = 0, this.data = {};\n  };\n\n  T.prototype.train = function (r, t) {\n    for (var n in this.data[t] || (this.data[t] = {}), r) {\n      var e = r[n];\n      void 0 === this.data[t][n] && (this.data[t][n] = {}), void 0 === this.data[t][n][e] && (this.data[t][n][e] = 0), this.data[t][n][e]++;\n    }\n\n    this.totalCount++;\n  }, T.prototype.score = function (r) {\n    var t,\n        n = {};\n\n    for (var e in r) {\n      var o = r[e];\n\n      for (t in this.data) {\n        n[t] = {}, n[t][e + \"_\" + o] = this.data[t][e] ? (this.data[t][e][o] || 0) / this.totalCount : 0;\n      }\n    }\n\n    var a = {};\n\n    for (t in n) {\n      for (var i in a[t] = 0, n[t]) {\n        a[t] += n[t][i];\n      }\n    }\n\n    return a;\n  };\n\n  var _ = function _() {\n    this.weights = [], this.bias = 0;\n  };\n\n  _.prototype.predict = function (r) {\n    if (r.length !== this.weights.length) return null;\n\n    for (var t = 0, n = 0; n < this.weights.length; n++) {\n      t += this.weights[n] * r[n];\n    }\n\n    return (t += this.bias) > 0 ? 1 : 0;\n  }, _.prototype.train = function (r, t) {\n    if (0 !== t && 1 !== t) return null;\n    r.length !== this.weights.length && (this.weights = r, this.bias = 1);\n    var n = this.predict(r);\n\n    if (\"number\" == typeof n && n !== t) {\n      for (var e = t - n, o = 0; o < this.weights.length; o++) {\n        this.weights[o] += e * r[o];\n      }\n\n      this.bias += e;\n    }\n\n    return this;\n  };\n  var x = 1e-4;\n\n  function z(r) {\n    if (r < 0) throw new Error(\"factorial requires a non-negative value\");\n    if (Math.floor(r) !== r) throw new Error(\"factorial requires an integer input\");\n\n    for (var t = 1, n = 2; n <= r; n++) {\n      t *= n;\n    }\n\n    return t;\n  }\n\n  var B = [.9999999999999971, 57.15623566586292, -59.59796035547549, 14.136097974741746, -.4919138160976202, 3399464998481189e-20, 4652362892704858e-20, -9837447530487956e-20, .0001580887032249125, -.00021026444172410488, .00021743961811521265, -.0001643181065367639, 8441822398385275e-20, -26190838401581408e-21, 36899182659531625e-22],\n      K = 607 / 128,\n      U = Math.log(Math.sqrt(2 * Math.PI));\n  var G = {\n    1: {\n      .995: 0,\n      .99: 0,\n      .975: 0,\n      .95: 0,\n      .9: .02,\n      .5: .45,\n      .1: 2.71,\n      .05: 3.84,\n      .025: 5.02,\n      .01: 6.63,\n      .005: 7.88\n    },\n    2: {\n      .995: .01,\n      .99: .02,\n      .975: .05,\n      .95: .1,\n      .9: .21,\n      .5: 1.39,\n      .1: 4.61,\n      .05: 5.99,\n      .025: 7.38,\n      .01: 9.21,\n      .005: 10.6\n    },\n    3: {\n      .995: .07,\n      .99: .11,\n      .975: .22,\n      .95: .35,\n      .9: .58,\n      .5: 2.37,\n      .1: 6.25,\n      .05: 7.81,\n      .025: 9.35,\n      .01: 11.34,\n      .005: 12.84\n    },\n    4: {\n      .995: .21,\n      .99: .3,\n      .975: .48,\n      .95: .71,\n      .9: 1.06,\n      .5: 3.36,\n      .1: 7.78,\n      .05: 9.49,\n      .025: 11.14,\n      .01: 13.28,\n      .005: 14.86\n    },\n    5: {\n      .995: .41,\n      .99: .55,\n      .975: .83,\n      .95: 1.15,\n      .9: 1.61,\n      .5: 4.35,\n      .1: 9.24,\n      .05: 11.07,\n      .025: 12.83,\n      .01: 15.09,\n      .005: 16.75\n    },\n    6: {\n      .995: .68,\n      .99: .87,\n      .975: 1.24,\n      .95: 1.64,\n      .9: 2.2,\n      .5: 5.35,\n      .1: 10.65,\n      .05: 12.59,\n      .025: 14.45,\n      .01: 16.81,\n      .005: 18.55\n    },\n    7: {\n      .995: .99,\n      .99: 1.25,\n      .975: 1.69,\n      .95: 2.17,\n      .9: 2.83,\n      .5: 6.35,\n      .1: 12.02,\n      .05: 14.07,\n      .025: 16.01,\n      .01: 18.48,\n      .005: 20.28\n    },\n    8: {\n      .995: 1.34,\n      .99: 1.65,\n      .975: 2.18,\n      .95: 2.73,\n      .9: 3.49,\n      .5: 7.34,\n      .1: 13.36,\n      .05: 15.51,\n      .025: 17.53,\n      .01: 20.09,\n      .005: 21.96\n    },\n    9: {\n      .995: 1.73,\n      .99: 2.09,\n      .975: 2.7,\n      .95: 3.33,\n      .9: 4.17,\n      .5: 8.34,\n      .1: 14.68,\n      .05: 16.92,\n      .025: 19.02,\n      .01: 21.67,\n      .005: 23.59\n    },\n    10: {\n      .995: 2.16,\n      .99: 2.56,\n      .975: 3.25,\n      .95: 3.94,\n      .9: 4.87,\n      .5: 9.34,\n      .1: 15.99,\n      .05: 18.31,\n      .025: 20.48,\n      .01: 23.21,\n      .005: 25.19\n    },\n    11: {\n      .995: 2.6,\n      .99: 3.05,\n      .975: 3.82,\n      .95: 4.57,\n      .9: 5.58,\n      .5: 10.34,\n      .1: 17.28,\n      .05: 19.68,\n      .025: 21.92,\n      .01: 24.72,\n      .005: 26.76\n    },\n    12: {\n      .995: 3.07,\n      .99: 3.57,\n      .975: 4.4,\n      .95: 5.23,\n      .9: 6.3,\n      .5: 11.34,\n      .1: 18.55,\n      .05: 21.03,\n      .025: 23.34,\n      .01: 26.22,\n      .005: 28.3\n    },\n    13: {\n      .995: 3.57,\n      .99: 4.11,\n      .975: 5.01,\n      .95: 5.89,\n      .9: 7.04,\n      .5: 12.34,\n      .1: 19.81,\n      .05: 22.36,\n      .025: 24.74,\n      .01: 27.69,\n      .005: 29.82\n    },\n    14: {\n      .995: 4.07,\n      .99: 4.66,\n      .975: 5.63,\n      .95: 6.57,\n      .9: 7.79,\n      .5: 13.34,\n      .1: 21.06,\n      .05: 23.68,\n      .025: 26.12,\n      .01: 29.14,\n      .005: 31.32\n    },\n    15: {\n      .995: 4.6,\n      .99: 5.23,\n      .975: 6.27,\n      .95: 7.26,\n      .9: 8.55,\n      .5: 14.34,\n      .1: 22.31,\n      .05: 25,\n      .025: 27.49,\n      .01: 30.58,\n      .005: 32.8\n    },\n    16: {\n      .995: 5.14,\n      .99: 5.81,\n      .975: 6.91,\n      .95: 7.96,\n      .9: 9.31,\n      .5: 15.34,\n      .1: 23.54,\n      .05: 26.3,\n      .025: 28.85,\n      .01: 32,\n      .005: 34.27\n    },\n    17: {\n      .995: 5.7,\n      .99: 6.41,\n      .975: 7.56,\n      .95: 8.67,\n      .9: 10.09,\n      .5: 16.34,\n      .1: 24.77,\n      .05: 27.59,\n      .025: 30.19,\n      .01: 33.41,\n      .005: 35.72\n    },\n    18: {\n      .995: 6.26,\n      .99: 7.01,\n      .975: 8.23,\n      .95: 9.39,\n      .9: 10.87,\n      .5: 17.34,\n      .1: 25.99,\n      .05: 28.87,\n      .025: 31.53,\n      .01: 34.81,\n      .005: 37.16\n    },\n    19: {\n      .995: 6.84,\n      .99: 7.63,\n      .975: 8.91,\n      .95: 10.12,\n      .9: 11.65,\n      .5: 18.34,\n      .1: 27.2,\n      .05: 30.14,\n      .025: 32.85,\n      .01: 36.19,\n      .005: 38.58\n    },\n    20: {\n      .995: 7.43,\n      .99: 8.26,\n      .975: 9.59,\n      .95: 10.85,\n      .9: 12.44,\n      .5: 19.34,\n      .1: 28.41,\n      .05: 31.41,\n      .025: 34.17,\n      .01: 37.57,\n      .005: 40\n    },\n    21: {\n      .995: 8.03,\n      .99: 8.9,\n      .975: 10.28,\n      .95: 11.59,\n      .9: 13.24,\n      .5: 20.34,\n      .1: 29.62,\n      .05: 32.67,\n      .025: 35.48,\n      .01: 38.93,\n      .005: 41.4\n    },\n    22: {\n      .995: 8.64,\n      .99: 9.54,\n      .975: 10.98,\n      .95: 12.34,\n      .9: 14.04,\n      .5: 21.34,\n      .1: 30.81,\n      .05: 33.92,\n      .025: 36.78,\n      .01: 40.29,\n      .005: 42.8\n    },\n    23: {\n      .995: 9.26,\n      .99: 10.2,\n      .975: 11.69,\n      .95: 13.09,\n      .9: 14.85,\n      .5: 22.34,\n      .1: 32.01,\n      .05: 35.17,\n      .025: 38.08,\n      .01: 41.64,\n      .005: 44.18\n    },\n    24: {\n      .995: 9.89,\n      .99: 10.86,\n      .975: 12.4,\n      .95: 13.85,\n      .9: 15.66,\n      .5: 23.34,\n      .1: 33.2,\n      .05: 36.42,\n      .025: 39.36,\n      .01: 42.98,\n      .005: 45.56\n    },\n    25: {\n      .995: 10.52,\n      .99: 11.52,\n      .975: 13.12,\n      .95: 14.61,\n      .9: 16.47,\n      .5: 24.34,\n      .1: 34.28,\n      .05: 37.65,\n      .025: 40.65,\n      .01: 44.31,\n      .005: 46.93\n    },\n    26: {\n      .995: 11.16,\n      .99: 12.2,\n      .975: 13.84,\n      .95: 15.38,\n      .9: 17.29,\n      .5: 25.34,\n      .1: 35.56,\n      .05: 38.89,\n      .025: 41.92,\n      .01: 45.64,\n      .005: 48.29\n    },\n    27: {\n      .995: 11.81,\n      .99: 12.88,\n      .975: 14.57,\n      .95: 16.15,\n      .9: 18.11,\n      .5: 26.34,\n      .1: 36.74,\n      .05: 40.11,\n      .025: 43.19,\n      .01: 46.96,\n      .005: 49.65\n    },\n    28: {\n      .995: 12.46,\n      .99: 13.57,\n      .975: 15.31,\n      .95: 16.93,\n      .9: 18.94,\n      .5: 27.34,\n      .1: 37.92,\n      .05: 41.34,\n      .025: 44.46,\n      .01: 48.28,\n      .005: 50.99\n    },\n    29: {\n      .995: 13.12,\n      .99: 14.26,\n      .975: 16.05,\n      .95: 17.71,\n      .9: 19.77,\n      .5: 28.34,\n      .1: 39.09,\n      .05: 42.56,\n      .025: 45.72,\n      .01: 49.59,\n      .005: 52.34\n    },\n    30: {\n      .995: 13.79,\n      .99: 14.95,\n      .975: 16.79,\n      .95: 18.49,\n      .9: 20.6,\n      .5: 29.34,\n      .1: 40.26,\n      .05: 43.77,\n      .025: 46.98,\n      .01: 50.89,\n      .005: 53.67\n    },\n    40: {\n      .995: 20.71,\n      .99: 22.16,\n      .975: 24.43,\n      .95: 26.51,\n      .9: 29.05,\n      .5: 39.34,\n      .1: 51.81,\n      .05: 55.76,\n      .025: 59.34,\n      .01: 63.69,\n      .005: 66.77\n    },\n    50: {\n      .995: 27.99,\n      .99: 29.71,\n      .975: 32.36,\n      .95: 34.76,\n      .9: 37.69,\n      .5: 49.33,\n      .1: 63.17,\n      .05: 67.5,\n      .025: 71.42,\n      .01: 76.15,\n      .005: 79.49\n    },\n    60: {\n      .995: 35.53,\n      .99: 37.48,\n      .975: 40.48,\n      .95: 43.19,\n      .9: 46.46,\n      .5: 59.33,\n      .1: 74.4,\n      .05: 79.08,\n      .025: 83.3,\n      .01: 88.38,\n      .005: 91.95\n    },\n    70: {\n      .995: 43.28,\n      .99: 45.44,\n      .975: 48.76,\n      .95: 51.74,\n      .9: 55.33,\n      .5: 69.33,\n      .1: 85.53,\n      .05: 90.53,\n      .025: 95.02,\n      .01: 100.42,\n      .005: 104.22\n    },\n    80: {\n      .995: 51.17,\n      .99: 53.54,\n      .975: 57.15,\n      .95: 60.39,\n      .9: 64.28,\n      .5: 79.33,\n      .1: 96.58,\n      .05: 101.88,\n      .025: 106.63,\n      .01: 112.33,\n      .005: 116.32\n    },\n    90: {\n      .995: 59.2,\n      .99: 61.75,\n      .975: 65.65,\n      .95: 69.13,\n      .9: 73.29,\n      .5: 89.33,\n      .1: 107.57,\n      .05: 113.14,\n      .025: 118.14,\n      .01: 124.12,\n      .005: 128.3\n    },\n    100: {\n      .995: 67.33,\n      .99: 70.06,\n      .975: 74.22,\n      .95: 77.93,\n      .9: 82.36,\n      .5: 99.33,\n      .1: 118.5,\n      .05: 124.34,\n      .025: 129.56,\n      .01: 135.81,\n      .005: 140.17\n    }\n  };\n  var H = Math.sqrt(2 * Math.PI),\n      W = {\n    gaussian: function gaussian(r) {\n      return Math.exp(-.5 * r * r) / H;\n    }\n  },\n      J = {\n    nrd: function nrd(r) {\n      var t = D(r),\n          n = d(r);\n      return \"number\" == typeof n && (t = Math.min(t, n / 1.34)), 1.06 * t * Math.pow(r.length, -.2);\n    }\n  };\n\n  function Q(r, t, n) {\n    var e, o;\n    if (void 0 === t) e = W.gaussian;else if (\"string\" == typeof t) {\n      if (!W[t]) throw new Error('Unknown kernel \"' + t + '\"');\n      e = W[t];\n    } else e = t;\n    if (void 0 === n) o = J.nrd(r);else if (\"string\" == typeof n) {\n      if (!J[n]) throw new Error('Unknown bandwidth method \"' + n + '\"');\n      o = J[n](r);\n    } else o = n;\n    return function (t) {\n      var n = 0,\n          a = 0;\n\n      for (n = 0; n < r.length; n++) {\n        a += e((t - r[n]) / o);\n      }\n\n      return a / o / r.length;\n    };\n  }\n\n  var Y = Math.sqrt(2 * Math.PI);\n\n  function Z(r) {\n    for (var t = r, n = r, e = 1; e < 15; e++) {\n      t += n *= r * r / (2 * e + 1);\n    }\n\n    return Math.round(1e4 * (.5 + t / Y * Math.exp(-r * r / 2))) / 1e4;\n  }\n\n  for (var L = [], O = 0; O <= 3.09; O += .01) {\n    L.push(Z(O));\n  }\n\n  function V(r) {\n    var t = 1 / (1 + .5 * Math.abs(r)),\n        n = t * Math.exp(-Math.pow(r, 2) - 1.26551223 + 1.00002368 * t + .37409196 * Math.pow(t, 2) + .09678418 * Math.pow(t, 3) - .18628806 * Math.pow(t, 4) + .27886807 * Math.pow(t, 5) - 1.13520398 * Math.pow(t, 6) + 1.48851587 * Math.pow(t, 7) - .82215223 * Math.pow(t, 8) + .17087277 * Math.pow(t, 9));\n    return r >= 0 ? 1 - n : n - 1;\n  }\n\n  function X(r) {\n    var t = 8 * (Math.PI - 3) / (3 * Math.PI * (4 - Math.PI)),\n        n = Math.sqrt(Math.sqrt(Math.pow(2 / (Math.PI * t) + Math.log(1 - r * r) / 2, 2) - Math.log(1 - r * r) / t) - (2 / (Math.PI * t) + Math.log(1 - r * r) / 2));\n    return r >= 0 ? n : -n;\n  }\n\n  function k(r) {\n    if (\"number\" == typeof r) return r < 0 ? -1 : 0 === r ? 0 : 1;\n    throw new TypeError(\"not a number\");\n  }\n\n  r.linearRegression = function (r) {\n    var t,\n        n,\n        e = r.length;\n    if (1 === e) t = 0, n = r[0][1];else {\n      for (var o, a, i, h = 0, u = 0, f = 0, l = 0, s = 0; s < e; s++) {\n        h += a = (o = r[s])[0], u += i = o[1], f += a * a, l += a * i;\n      }\n\n      n = u / e - (t = (e * l - h * u) / (e * f - h * h)) * h / e;\n    }\n    return {\n      m: t,\n      b: n\n    };\n  }, r.linearRegressionLine = function (r) {\n    return function (t) {\n      return r.b + r.m * t;\n    };\n  }, r.standardDeviation = a, r.rSquared = function (r, t) {\n    if (r.length < 2) return 1;\n\n    for (var n = 0, e = 0; e < r.length; e++) {\n      n += r[e][1];\n    }\n\n    for (var o = n / r.length, a = 0, i = 0; i < r.length; i++) {\n      a += Math.pow(o - r[i][1], 2);\n    }\n\n    for (var h = 0, u = 0; u < r.length; u++) {\n      h += Math.pow(r[u][1] - t(r[u][0]), 2);\n    }\n\n    return 1 - h / a;\n  }, r.mode = function (r) {\n    return i(h(r));\n  }, r.modeFast = function (r) {\n    for (var t, n = new Map(), e = 0, o = 0; o < r.length; o++) {\n      var a = n.get(r[o]);\n      void 0 === a ? a = 1 : a++, a > e && (t = r[o], e = a), n.set(r[o], a);\n    }\n\n    if (0 === e) throw new Error(\"mode requires at last one data point\");\n    return t;\n  }, r.modeSorted = i, r.min = u, r.max = f, r.extent = function (r) {\n    if (0 === r.length) throw new Error(\"extent requires at least one data point\");\n\n    for (var t = r[0], n = r[0], e = 1; e < r.length; e++) {\n      r[e] > n && (n = r[e]), r[e] < t && (t = r[e]);\n    }\n\n    return [t, n];\n  }, r.minSorted = function (r) {\n    return r[0];\n  }, r.maxSorted = function (r) {\n    return r[r.length - 1];\n  }, r.extentSorted = function (r) {\n    return [r[0], r[r.length - 1]];\n  }, r.sum = t, r.sumSimple = function (r) {\n    for (var t = 0, n = 0; n < r.length; n++) {\n      t += r[n];\n    }\n\n    return t;\n  }, r.product = function (r) {\n    for (var t = 1, n = 0; n < r.length; n++) {\n      t *= r[n];\n    }\n\n    return t;\n  }, r.quantile = g, r.quantileSorted = l, r.quantileRank = function (r, t) {\n    return w(h(r), t);\n  }, r.quantileRankSorted = w, r.interquartileRange = d, r.iqr = d, r.medianAbsoluteDeviation = m, r.mad = m, r.chunk = function (r, t) {\n    var n = [];\n    if (t < 1) throw new Error(\"chunk size must be a positive number\");\n    if (Math.floor(t) !== t) throw new Error(\"chunk size must be an integer\");\n\n    for (var e = 0; e < r.length; e += t) {\n      n.push(r.slice(e, e + t));\n    }\n\n    return n;\n  }, r.sampleWithReplacement = function (r, t, n) {\n    if (0 === r.length) return [];\n    n = n || Math.random;\n\n    for (var e = r.length, o = [], a = 0; a < t; a++) {\n      var i = Math.floor(n() * e);\n      o.push(r[i]);\n    }\n\n    return o;\n  }, r.shuffle = y, r.shuffleInPlace = b, r.sample = function (r, t, n) {\n    return y(r, n).slice(0, t);\n  }, r.ckmeans = function (r, t) {\n    if (t > r.length) throw new Error(\"cannot generate more classes than there are data values\");\n    var n = h(r);\n    if (1 === E(n)) return [n];\n    var e = I(t, n.length),\n        o = I(t, n.length);\n    !function (r, t, n) {\n      for (var e = t[0].length, o = r[Math.floor(e / 2)], a = [], i = [], h = 0, u = void 0; h < e; ++h) {\n        u = r[h] - o, 0 === h ? (a.push(u), i.push(u * u)) : (a.push(a[h - 1] + u), i.push(i[h - 1] + u * u)), t[0][h] = P(0, h, a, i), n[0][h] = 0;\n      }\n\n      for (var f = 1; f < t.length; ++f) {\n        C(f < t.length - 1 ? f : e - 1, e - 1, f, t, n, a, i);\n      }\n    }(n, e, o);\n\n    for (var a = [], i = o[0].length - 1, u = o.length - 1; u >= 0; u--) {\n      var f = o[u][i];\n      a[u] = n.slice(f, i + 1), u > 0 && (i = f - 1);\n    }\n\n    return a;\n  }, r.uniqueCountSorted = E, r.sumNthPowerDeviations = e, r.equalIntervalBreaks = function (r, t) {\n    if (r.length < 2) return r;\n\n    for (var n = u(r), e = f(r), o = [n], a = (e - n) / t, i = 1; i < t; i++) {\n      o.push(o[0] + a * i);\n    }\n\n    return o.push(e), o;\n  }, r.sampleCovariance = N, r.sampleCorrelation = function (r, t) {\n    return N(r, t) / D(r) / D(t);\n  }, r.sampleVariance = R, r.sampleStandardDeviation = D, r.sampleSkewness = function (r) {\n    if (r.length < 3) throw new Error(\"sampleSkewness requires at least three data points\");\n\n    for (var t, e = n(r), o = 0, a = 0, i = 0; i < r.length; i++) {\n      o += (t = r[i] - e) * t, a += t * t * t;\n    }\n\n    var h = Math.sqrt(o / (r.length - 1)),\n        u = r.length;\n    return u * a / ((u - 1) * (u - 2) * Math.pow(h, 3));\n  }, r.sampleKurtosis = function (r) {\n    var t = r.length;\n    if (t < 4) throw new Error(\"sampleKurtosis requires at least four data points\");\n\n    for (var e, o = n(r), a = 0, i = 0, h = 0; h < t; h++) {\n      a += (e = r[h] - o) * e, i += e * e * e * e;\n    }\n\n    return (t - 1) / ((t - 2) * (t - 3)) * (t * (t + 1) * i / (a * a) - 3 * (t - 1));\n  }, r.permutationsHeap = function (r) {\n    for (var t = new Array(r.length), n = [r.slice()], e = 0; e < r.length; e++) {\n      t[e] = 0;\n    }\n\n    for (var o = 0; o < r.length;) {\n      if (t[o] < o) {\n        var a = 0;\n        o % 2 != 0 && (a = t[o]);\n        var i = r[a];\n        r[a] = r[o], r[o] = i, n.push(r.slice()), t[o]++, o = 0;\n      } else t[o] = 0, o++;\n    }\n\n    return n;\n  }, r.combinations = function r(t, n) {\n    var e,\n        o,\n        a,\n        i,\n        h = [];\n\n    for (e = 0; e < t.length; e++) {\n      if (1 === n) h.push([t[e]]);else for (a = r(t.slice(e + 1, t.length), n - 1), o = 0; o < a.length; o++) {\n        (i = a[o]).unshift(t[e]), h.push(i);\n      }\n    }\n\n    return h;\n  }, r.combinationsReplacement = function r(t, n) {\n    for (var e = [], o = 0; o < t.length; o++) {\n      if (1 === n) e.push([t[o]]);else for (var a = r(t.slice(o, t.length), n - 1), i = 0; i < a.length; i++) {\n        e.push([t[o]].concat(a[i]));\n      }\n    }\n\n    return e;\n  }, r.addToMean = function (r, t, n) {\n    return r + (n - r) / (t + 1);\n  }, r.combineMeans = A, r.combineVariances = function (r, t, n, e, o, a) {\n    var i = A(t, n, o, a);\n    return (n * (r + Math.pow(t - i, 2)) + a * (e + Math.pow(o - i, 2))) / (n + a);\n  }, r.geometricMean = function (r) {\n    if (0 === r.length) throw new Error(\"geometricMean requires at least one data point\");\n\n    for (var t = 1, n = 0; n < r.length; n++) {\n      if (r[n] <= 0) throw new Error(\"geometricMean requires only positive numbers as input\");\n      t *= r[n];\n    }\n\n    return Math.pow(t, 1 / r.length);\n  }, r.harmonicMean = function (r) {\n    if (0 === r.length) throw new Error(\"harmonicMean requires at least one data point\");\n\n    for (var t = 0, n = 0; n < r.length; n++) {\n      if (r[n] <= 0) throw new Error(\"harmonicMean requires only positive numbers as input\");\n      t += 1 / r[n];\n    }\n\n    return r.length / t;\n  }, r.average = n, r.mean = n, r.median = q, r.medianSorted = function (r) {\n    return l(r, .5);\n  }, r.subtractFromMean = function (r, t, n) {\n    return (r * t - n) / (t - 1);\n  }, r.rootMeanSquare = S, r.rms = S, r.variance = o, r.tTest = function (r, t) {\n    return (n(r) - t) / (a(r) / Math.sqrt(r.length));\n  }, r.tTestTwoSample = function (r, t, e) {\n    var o = r.length,\n        a = t.length;\n    if (!o || !a) return null;\n    e || (e = 0);\n    var i = n(r),\n        h = n(t),\n        u = R(r),\n        f = R(t);\n    return \"number\" == typeof i && \"number\" == typeof h && \"number\" == typeof u && \"number\" == typeof f ? (i - h - e) / Math.sqrt(((o - 1) * u + (a - 1) * f) / (o + a - 2) * (1 / o + 1 / a)) : void 0;\n  }, r.BayesianClassifier = T, r.bayesian = T, r.PerceptronModel = _, r.perceptron = _, r.epsilon = x, r.factorial = z, r.gamma = function r(t) {\n    if (Number.isInteger(t)) return t <= 0 ? NaN : z(t - 1);\n    if (--t < 0) return Math.PI / (Math.sin(Math.PI * -t) * r(-t));\n    var n = t + .25;\n    return Math.pow(t / Math.E, t) * Math.sqrt(2 * Math.PI * (t + 1 / 6)) * (1 + 1 / 144 / Math.pow(n, 2) - 1 / 12960 / Math.pow(n, 3) - 257 / 207360 / Math.pow(n, 4) - 52 / 2612736 / Math.pow(n, 5) + 5741173 / 9405849600 / Math.pow(n, 6) + 37529 / 18811699200 / Math.pow(n, 7));\n  }, r.gammaln = function (r) {\n    if (r <= 0) return Infinity;\n    r--;\n\n    for (var t = B[0], n = 1; n < 15; n++) {\n      t += B[n] / (r + n);\n    }\n\n    var e = K + .5 + r;\n    return U + Math.log(t) - e + (r + .5) * Math.log(e);\n  }, r.bernoulliDistribution = function (r) {\n    if (r < 0 || r > 1) throw new Error(\"bernoulliDistribution requires probability to be between 0 and 1 inclusive\");\n    return [1 - r, r];\n  }, r.binomialDistribution = function (r, t) {\n    if (!(t < 0 || t > 1 || r <= 0 || r % 1 != 0)) {\n      var n = 0,\n          e = 0,\n          o = [],\n          a = 1;\n\n      do {\n        o[n] = a * Math.pow(t, n) * Math.pow(1 - t, r - n), e += o[n], a = a * (r - ++n + 1) / n;\n      } while (e < 1 - x);\n\n      return o;\n    }\n  }, r.poissonDistribution = function (r) {\n    if (!(r <= 0)) {\n      var t = 0,\n          n = 0,\n          e = [],\n          o = 1;\n\n      do {\n        e[t] = Math.exp(-r) * Math.pow(r, t) / o, n += e[t], o *= ++t;\n      } while (n < 1 - x);\n\n      return e;\n    }\n  }, r.chiSquaredDistributionTable = G, r.chiSquaredGoodnessOfFit = function (r, t, e) {\n    for (var o = 0, a = t(n(r)), i = [], h = [], u = 0; u < r.length; u++) {\n      void 0 === i[r[u]] && (i[r[u]] = 0), i[r[u]]++;\n    }\n\n    for (var f = 0; f < i.length; f++) {\n      void 0 === i[f] && (i[f] = 0);\n    }\n\n    for (var l in a) {\n      l in i && (h[+l] = a[l] * r.length);\n    }\n\n    for (var s = h.length - 1; s >= 0; s--) {\n      h[s] < 3 && (h[s - 1] += h[s], h.pop(), i[s - 1] += i[s], i.pop());\n    }\n\n    for (var c = 0; c < i.length; c++) {\n      o += Math.pow(i[c] - h[c], 2) / h[c];\n    }\n\n    return G[i.length - 1 - 1][e] < o;\n  }, r.kernelDensityEstimation = Q, r.kde = Q, r.zScore = function (r, t, n) {\n    return (r - t) / n;\n  }, r.cumulativeStdNormalProbability = function (r) {\n    var t = Math.abs(r),\n        n = Math.min(Math.round(100 * t), L.length - 1);\n    return r >= 0 ? L[n] : +(1 - L[n]).toFixed(4);\n  }, r.standardNormalTable = L, r.errorFunction = V, r.erf = V, r.inverseErrorFunction = X, r.probit = function (r) {\n    return 0 === r ? r = x : r >= 1 && (r = 1 - x), Math.sqrt(2) * X(2 * r - 1);\n  }, r.permutationTest = function (r, t, e, o) {\n    if (void 0 === o && (o = 1e4), void 0 === e && (e = \"two_side\"), \"two_side\" !== e && \"greater\" !== e && \"less\" !== e) throw new Error(\"`alternative` must be either 'two_side', 'greater', or 'less'\");\n\n    for (var a = n(r) - n(t), i = new Array(o), h = r.concat(t), u = Math.floor(h.length / 2), f = 0; f < o; f++) {\n      b(h);\n      var l = h.slice(0, u),\n          s = h.slice(u, h.length),\n          c = n(l) - n(s);\n      i[f] = c;\n    }\n\n    var g = 0;\n    if (\"two_side\" === e) for (var v = 0; v <= o; v++) {\n      Math.abs(i[v]) >= Math.abs(a) && (g += 1);\n    } else if (\"greater\" === e) for (var p = 0; p <= o; p++) {\n      i[p] >= a && (g += 1);\n    } else for (var M = 0; M <= o; M++) {\n      i[M] <= a && (g += 1);\n    }\n    return g / o;\n  }, r.bisect = function (r, t, n, e, o) {\n    if (\"function\" != typeof r) throw new TypeError(\"func must be a function\");\n\n    for (var a = 0; a < e; a++) {\n      var i = (t + n) / 2;\n      if (0 === r(i) || Math.abs((n - t) / 2) < o) return i;\n      k(r(i)) === k(r(t)) ? t = i : n = i;\n    }\n\n    throw new Error(\"maximum number of iterations exceeded\");\n  }, r.quickselect = s, r.sign = k, r.numericSort = h;\n});","/* eslint-disable no-restricted-globals */\nimport * as ss from \"simple-statistics\";\n\nself.addEventListener(\"message\", event => {\n  const input: number[][] = event.data;\n  const res = ss.linearRegression(input);\n  console.log(\"worker\", res);\n  (self as any).postMessage(res);\n});\n"],"sourceRoot":""}